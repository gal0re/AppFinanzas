// <auto-generated />
using AppFinanzas.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AppFinanzas.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(FinanzasContext))]
    partial class FinanzasContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AppFinanzas.Domain.Entities.Activo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("TipoActivoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TipoActivoId");

                    b.ToTable("Activos", (string)null);
                });

            modelBuilder.Entity("AppFinanzas.Domain.Entities.EstadoOrden", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("DescripcionEstado")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("EstadosOrden", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 0,
                            DescripcionEstado = "En proceso"
                        },
                        new
                        {
                            Id = 1,
                            DescripcionEstado = "Ejecutada"
                        },
                        new
                        {
                            Id = 3,
                            DescripcionEstado = "Cancelada"
                        });
                });

            modelBuilder.Entity("AppFinanzas.Domain.Entities.OrdenInversion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("IdActivo")
                        .HasColumnType("int");

                    b.Property<int>("IdCuenta")
                        .HasColumnType("int");

                    b.Property<decimal>("MontoTotal")
                        .HasColumnType("decimal(18,4)");

                    b.Property<string>("NombreActivo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Operacion")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,4)");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.HasIndex("IdActivo");

                    b.ToTable("Ordenes", (string)null);
                });

            modelBuilder.Entity("AppFinanzas.Domain.Entities.TipoActivo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("TiposActivos", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Acción"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Bono"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "FCI"
                        });
                });

            modelBuilder.Entity("AppFinanzas.Domain.Entities.Activo", b =>
                {
                    b.HasOne("AppFinanzas.Domain.Entities.TipoActivo", "TipoActivo")
                        .WithMany("Activos")
                        .HasForeignKey("TipoActivoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TipoActivo");
                });

            modelBuilder.Entity("AppFinanzas.Domain.Entities.OrdenInversion", b =>
                {
                    b.HasOne("AppFinanzas.Domain.Entities.EstadoOrden", "Estado")
                        .WithMany("Ordenes")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AppFinanzas.Domain.Entities.Activo", "Activo")
                        .WithMany("Ordenes")
                        .HasForeignKey("IdActivo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Activo");

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("AppFinanzas.Domain.Entities.Activo", b =>
                {
                    b.Navigation("Ordenes");
                });

            modelBuilder.Entity("AppFinanzas.Domain.Entities.EstadoOrden", b =>
                {
                    b.Navigation("Ordenes");
                });

            modelBuilder.Entity("AppFinanzas.Domain.Entities.TipoActivo", b =>
                {
                    b.Navigation("Activos");
                });
#pragma warning restore 612, 618
        }
    }
}
